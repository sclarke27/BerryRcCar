<html>

<head>
	<title>Berry Rc Car</title>
	<style>
		* {
			padding: 0px;
			margin: 0px;
		}

		body {
			background-color: black;
			color: white;
			width: 100vw;
			height: 100vh;
		}
	</style>

</head>

<body onload="go();">

	<script type="text/javascript">
		let magnetometerX = 0;
		let magnetometerY = 0;
		let magnetometerZ = 0;

		let yCenterPoint = null;

		function map(x, in_min, in_max, out_min, out_max) {
			return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
		}

		function constrain(curr, min, max) {
			let returnValue = curr;
			if (curr < min) {
				returnValue = max + curr;
			}
			if (curr > max) {
				returnValue = max - curr;
			}
			return returnValue;
		}

		function orientation(event) {
			if (event.alpha !== null) {
				newYValue = Math.round(event.alpha);
				newZValue = Math.round(event.beta);
				newXValue = Math.round(event.gamma);

				if (newXValue !== magnetometerX || newYValue !== magnetometerY || newZValue !== magnetometerZ) {
					magnetometerX = newXValue;// - ((newZValue >= 0 && newZValue <= 90) ? 180 : 0);
					magnetometerY = newYValue;
					magnetometerZ = newZValue;

					if(magnetometerX < 0) {
						magnetometerX = magnetometerX + 180;
					}

					magnetometerY = magnetometerY + 180;
					if(magnetometerY > 360) {
						magnetometerY = magnetometerY - 360;
					}

					flipY = false;
					if (newXValue <= 0) {
						magnetometerX = newXValue * -1;
					} else if (newXValue > 0 && newXValue <= 90) {
						magnetometerX = map(newXValue, 90, 0, 90, 180);
					} else {
						magnetometerX = newXValue;
					}

					if (magnetometerX > 0) {
						magnetometerY = map(newYValue, 0, 360, 360, 0);
					}
					if (magnetometerX >= 90) {
						magnetometerY = constrain((magnetometerY - 180), 0, 360);
					}


					if (yCenterPoint === null) {
						yCenterPoint = constrain((magnetometerY - 180), 0, 360);
						if (yCenterPoint > 360) {
							yCenterPoint = yCenterPoint - 360;
						}
					}
					magnetometerY = constrain((magnetometerY - yCenterPoint), 0, 360);


					document.getElementById("magnetometerXR").innerHTML = magnetometerX;
					document.getElementById("magnetometerYR").innerHTML = magnetometerY;
					document.getElementById("magnetometerZR").innerHTML = magnetometerZ;
					document.getElementById("magnetometerXL").innerHTML = magnetometerX;
					document.getElementById("magnetometerYL").innerHTML = magnetometerY;
					document.getElementById("magnetometerZL").innerHTML = magnetometerZ;
					setSensorValue('Mag', magnetometerX, magnetometerY, magnetometerZ);
				}
			}
		}

		function setSensorValue(channel, x, y, z) {
			sendCommand('phoneMagX', x);
			sendCommand('phoneMagY', y);
			sendCommand('phoneMagZ', z);

			return false;
		}

		function go() {
			if (window.DeviceOrientationEvent) {
				window.addEventListener("deviceorientation", orientation, false);
			}
		}

		function sendCommand(channel, value) {
			console.info(channel, value)
			this.swimUrl = '{{fullSwimUrl}}';
			swim.client.command(this.swimUrl, `/sensor/${channel}`, 'addLatest', parseInt(value));
		}
	</script>
	<style>
		.vrWrapper {
			width: 917px;
			height: 100%;
			display: flex;
			flex-direction: row;
			padding: 0px;
			margin: 0px 0px;
		}

		.leftEye,
		.rightEye {
			height: 100%;
			background-position: top center;
			background-repeat: no-repeat;
			background-size: contain;
			position: relative;
			flex: 1 1 50%;
		}

		.coords {
			width: 100%;
			display: flex;
			flex-direction: row;
			font-size: 10px;
			margin: 5px;
			color: rgba(255, 255, 255, 0.2);
		}

		.coords div {
			padding: 0px 5px 0px 2px;
			color: rgba(255, 255, 255, 0.6);
		}
	</style>
<form>
	x: 
	<input type="range" id="tilt" name="volume" value="90" min="0" max="180" oninput="sendCommand('phoneMagX', this.value)" />
	y: 
	<input type="range" id="pan" name="volume" value="180" min="0" max="360" oninput="sendCommand('phoneMagY', this.value)"  />
	z: 
	<input type="range" id="roll" name="volume" value="0" min="-90" max="90" oninput="sendCommand('phoneMagZ', this.value)"  />
</form>	
	<div class="vrWrapper">
		<div class="leftEye" style="background-image: url(http://{{{hostUrl}}}:8081/)">

			<div class="coords">
				X:
				<div id="magnetometerXL"></div>
				Y:
				<div id="magnetometerYL"></div>
				Z:
				<div id="magnetometerZL"></div>
			</div>
		</div>
		<div class="rightEye" style="background-image: url(http://{{{hostUrl}}}:8082/)">
			<div class="coords">
				X:
				<div id="magnetometerXR"></div>
				Y:
				<div id="magnetometerYR"></div>
				Z:
				<div id="magnetometerZR"></div>
			</div>
		</div>
	</div>

</body>

</html>